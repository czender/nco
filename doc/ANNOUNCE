$Header$ -*-text-*-

netCDF Operators NCO version 5.3.2 hit the streets

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nco/nco (Source Code, Issues, Releases)

What's new?
Version 5.3.2 mainly adds features and fixes to ncremap and
quantization. Support for vertical interpolation of ECMWF
IFS, and CAMS-format hybrid sigma-pressure vertical coordinate
datasets has been improved. And the output is more CF-compliant.
All arithmetic operators are once again able to use NCO quantization
algorithms on variables in non-root groups.
Skip this release if these changes do not interest you. 

Work on 5.3.3 is underway and includes improved NC_STRING
autoconversion support for other NCO operators.

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. ncremap will vertically interpolate a broader array of ECMWF
IFS and CAMS-format hybrid sigma-pressure vertical coordinate
datasets. Recent NCO versions required the log of the surface
pressure to be in the template vertical coordinate file, rather
than in the main dataset. Now the (log of) surface pressure can 
be either in the source dataset or the vertical grid file.
Previous versions requires the lnsp variable to contain a dimension
named lev_2 (as in IFS data). Now the regridder also accomodates
CAMS-format data that does not contain the lev_2 dimension.
Thanks to Erik Koene (LLNL) for persistently reporting this :)

ncremap --ps_nm=lnsp --vrt_fl=era5.nc cams_in.nc cams_out.nc

http://nco.sf.net/nco.html#ifs
http://nco.sf.net/nco.html#vrt

B. ncremap's vertical interpolator now attaches CF metadata
(standard_name), units, and long_name attributes to output files
stored on hybrid sigma-pressure vertical coordinate grids, e.g.,
  double P0 ;
      P0:long_name = "Reference pressure" ;
      P0:standard_name = "reference_air_pressure_for_atmosphere_vertical_coordinate" ;
      P0:units = "Pa" ;
    double hybm(nhym) ;
      hybm:long_name = "hybrid B coefficient at layer midpoints" ;
      hybm:units = "1" ;
      hybm:standard_name = "atmosphere_hybrid_sigma_pressure_coordinate" ;

C. ncremap and ncclimo previously prevented refused to overwrite
input files with the same name as output files. However, this safety
feature failed to detect when input and output filenames were symbolic
links to the same file. Now ncremap and ncclimo refuse to overwrite
input files that are the same inode/device as output files.
Thanks to Juan Tolento (UCI) for reporting this.

D. ncremap and ncclimo previously defaulted to using PBS "mpi_run -n
nd_nbr" to manage MPI-mode climatologies and regridding. Now
ncremap and ncclimo previously default to using SLURM "srun -n
nd_nbr". This make supporting MPI-mode on unknown (not in the internal
database of ncremap/ncclimo) machines more likely to work on SLURM,
which has become increasingly popular (at least at DOE).
Thanks to Jason Boutte (LLNL) for suggesting this.
http://nco.sf.net/nco.html#mpi

BUG FIXES:
   
A. Previous versions of NCO would sometimes fail to store
quantization metadata for variables in non-root groups. Now
quantization metadata works on variables in non-root groups.

ncks -O --qnt=btr --ppc dfl=6 -g g1 in_grp.nc out.nc

Thanks to Matt Thompson (GSFC) for reporting this.
http://nco.sf.net/nco.html#qnt

Full release statement at http://nco.sf.net/ANNOUNCE
    
KNOWN PROBLEMS DUE TO NCO:

This section of ANNOUNCE reports and reminds users of the
existence and severity of known, not yet fixed, problems. 
These problems occur with NCO 5.2.7 built/tested under
MacOS 15.3 with netCDF 4.9.4-development on HDF5 1.14.3
and with Linux FC40 with netCDF 4.9.2 on HDF5 1.14.3.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   20190201: Possibly this problem was fixed in netCDF 4.6.2 by https://github.com/Unidata/netcdf-c/pull/1001
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride
   Workaround #3: Compile NCO with netCDF >= 4.6.2

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but produces unreadable file foo.nc
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   20190202: Progress has recently been made in netCDF 4.6.3-development
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

