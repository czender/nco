$Header$ -*-text-*-

netCDF Operators NCO version 5.1.5 ascend the Silicon Throne

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nc/ncoo (Source Code, Issues, Releases)

What's new?
Version 5.1.5 polishes the new vertical interpolation capabilities
introduced in 5.1.3 and 5.1.4, improves the safety NCZarr operations,
and fixes minor ncremap bugs. This release can be skipped if these
regridding features are not useful to you.

Work on NCO 5.1.6 has commenced and aims to add support for Zarr S3 
stores and to polish support for new codecs.

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. ncremap now behaves more sensibly when vertically interpolating
MPAS-Ocean files/fields. Previously, users had to explicitly add
the multidimensional auxiliary depth coordinate (often
timeMonthly_avg_zMid) to the subsetted list of variables whenever
the subset list option (-v var1,var2...) was used. This is because
most MPAS datasets do not adhere to the CF "coordinates" convention,
and NCO has no way of knowing which auxiliary coordinates contain
the depth field. Now ncremap uses the -P mpasocean option to trigger
a search for the zMid coordinate in the input file. If found, ncremap
automatically adds it to the subset as appropriate.
ncremap -P mpas --vrt_out=vrt.nc --map=map.nc in.nc out.nc
http://nco.sf.net/nco.html#ncremap
http://nco.sf.net/nco.html#vrt_out

BUG FIXES:
   
A. ncrcat versions 4.8.0--5.1.4 could erroneously add a cell_methods
attribute to variables it processed. This behavior has been
eliminated. ncra still adds the attribute by default. The workaround
is to invoke ncrcat with the --no_cll_mth flag. The solution is to
upgrade. Thanks to Brian Vanderwende (NCAR) for reporting this.

B. Recent versions of ncremap incorrectly parsed the
--preserve_statistic (--prs_stt) option. The option was effectively
ignored. This has been fixed. The workaround is to explicitly invoke
the --rnr_thr=0.0 option. The solution is to upgrade.

C. ncremap version 5.1.4 incorrectly handles the name of the output
coordinate for vertical interpolation to pure-pressure surfaces.
Instead of naming the coordinate 'plev', or whatever is in the vrt_out
file, or what was specfified by the --plev_nm_out option, it just
named the coordinate (variable+dimension) 'lev'. These have all been
fixed. There is no workaround, and the solution is to upgrade.
Thanks to Jill Zhang and Ben Hillman for reporting this issue.

Full release statement at http://nco.sf.net/ANNOUNCE
    
KNOWN PROBLEMS DUE TO NCO:

This section of ANNOUNCE reports and reminds users of the
existence and severity of known, not yet fixed, problems. 
These problems occur with NCO 5.1.4 built/tested under
MacOS 13.1 with netCDF 4.9.1-RC2 on HDF5 1.12.2 and with
Linux with netCDF 4.8.1 on HDF5 1.8.19.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   20190201: Possibly this problem was fixed in netCDF 4.6.2 by https://github.com/Unidata/netcdf-c/pull/1001
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride
   Workaround #3: Compile NCO with netCDF >= 4.6.2

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but produces unreadable file foo.nc
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   20190202: Progress has recently been made in netCDF 4.6.3-development
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

