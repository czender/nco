$Header$ -*-text-*-

netCDF Operators NCO version 5.1.6 are coronated

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nc/ncoo (Source Code, Issues, Releases)

What's new?
Version 5.1.7 further polishes vertical interpolation, further
improves NCZarr safety, and fixes minor ncremap issues, improves EAMxx 
support, adds basic support for regridding Coupler history files, and
employs CF Conventions, where possible, on all input files regardless
of whether they claim to be CF-compliant.
This release can be skipped if you would not use the NCZarr and
regridder improvements.

Work on NCO 5.1.7 has commenced and aims to add support for Zarr S3 
stores and to polish support for new codecs.

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. ncremap now diagnoses rather than prescribes the monotonicity
direction (increasing or decreasing in index space) and dimension
ordering of vertical grids prior to searching for maxima/minima
surfaces beyond which extrapolation is necessary. That's a mouthful.
Basically this feature fixes corner cases in which input or output 3D
vertical grids (e.g., hybrid sigma/pressure, or MPAS-Ocean-style
grids) with non-standard directionality (which way is up?) or
dimensionality could have caused previous versions of NCO to misjudge
the vertical domain of the grid, and thus prevented implementing
missing values beyond the valid domain. Also, missing values in the
grids are better handled when looking for vertical domain boundaries. 
ncremap -P mpasocean --vrt_out=vrt.nc --map=map.nc in.nc out.nc
http://nco.sf.net/nco.html#ncremap
http://nco.sf.net/nco.html#vrt_out

B. ncclimo improves handling of output from the DOE EAMxx model
in two ways. ncclimo now understands the commonly used suffixes
for EAMxx monthly output files: "...YYYY-MM-01-00000.nc", and
allows these names to be used as the caseid argument for templating
filenames. Thanks to Chris Golaz (LLNL) prompting this feature.
caseid=really_long_string.0001-01-01-00000.nc
ncclimo -P eamxx -c ${caseid} -s 2000 -e 2019 -i $drc_in -o $drc_out
http://nco.sf.net/nco.html#ncclimo
http://nco.sf.net/nco.html#caseid

C. ncremap now supports non-spatial dimensions (temporal, spectral,
chemical) when vertically interpolating datasets. This now works for
all vertical grid types. Previously this only worked for hybrid/sigma
grids, and only then for temporal dimensions (this former limitation
never affected horizontal regridding). Now datasets with
non-spatio-temporal dimensions such as temperature(time, species, 
wavelength, horizontal, vertical) should vertically regrid properly.
http://nco.sf.net/nco.html#ncremap

D. ncremap now supports vertical interpolation of timeseries data from
pure-pressure to pure-pressure grids
ncremap --vrt_out=ncep_L17.nc ncep_L10.nc out.nc
http://nco.sf.net/nco.html#vrt

BUG FIXES:
   
A. This version of NCO fixes and error with the overwrite/removal of
NCZarr stores implemented in 5.1.5.
in_hdf5="${HOME}//nco/data/in_zarr4.nc"
out_ncz="file://${HOME}/foo#mode=nczarr,file"
ncks -O -v one ${in_hdf5} ${out_ncz}
There is no workaround. The solution is to upgrade.

B. ncap2 previously ignored the --cmp option when writing
new variables defined in the script. Now ncap2 uses the
cmp_sng option, if any, to determine and set compression
levels for new variables. The workaround is to use the
(old) '-L 1' option for DEFLATE. The solution is to upgrade.
Thanks to Hugo Oliveira for reporting this issue.

Full release statement at http://nco.sf.net/ANNOUNCE
    
KNOWN PROBLEMS DUE TO NCO:

This section of ANNOUNCE reports and reminds users of the
existence and severity of known, not yet fixed, problems. 
These problems occur with NCO 5.1.7 built/tested under
MacOS 13.3.1 with netCDF 4.9.3-dev on HDF5 1.14 and with
Linux with netCDF 4.9.2 on HDF5 1.14

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   20190201: Possibly this problem was fixed in netCDF 4.6.2 by https://github.com/Unidata/netcdf-c/pull/1001
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride
   Workaround #3: Compile NCO with netCDF >= 4.6.2

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but produces unreadable file foo.nc
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   20190202: Progress has recently been made in netCDF 4.6.3-development
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

