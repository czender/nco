$Header$ -*-text-*-

netCDF Operators NCO version 5.2.8 topple the technocracy

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nco/nco (Source Code, Issues, Releases)

What's new?
Version 5.2.8 mostly contains features and fixes for regridding
and climatology generation. Climatologies now allow the choice
between two statistics (sums and means) to output as regional/global
timeseries. The regridder fixes corner case behavior when the
sub-gridscale (SGS) fraction is a missing value (as in ELM/CLM).
Many improvements to the robustness and helpfulness of WARNINGs
and ERRORs are included. Upgrades are encouraged for everyone
who uses the regridder on ELM/CLM/CTSM datasets.

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. ncclimo has two new options to control global/regional timeseries:
--rgn_stt=avg|sum and --sum_scl=sum_scl. These options allow the user
to choose which statistic, sums or averages, to output with
global/regional timeseries for all variables. The option --rgn_stt=avg
is identical to the current timeseries output by the --rgn_avg switch
(which will be deprecated eventually). When invoked with --rgn_stt=sum
the averaged field is multiplied by the sum of the area variable.
For fields that are area-intensive (e.g., fluxes per unit area) this
results in the total net flux over the area. However, the field must
employ the same area units as the Area variable for this to be true.
For example, fields given in m-2 would need to employ an Area variable
in m2. Unfortunately, many people love non-SI units so that is rarely
the case! For example, ELM and CLM archive Area in km2, so a scale
factor of one million is needed to correct the sum for many variables.
EAM and CAM use sr-1 for Area so it needs a different scale factor.
That is why ncclimo accepts a second new option --sum_scl=sum_scl.
This scale factor multiplies the integrated field value, and allows
the user to generate timeseries in the desired units for any field.
The whole procedure is model and variable-specific and we are open
to suggestions to make it more useful. Example usage is: 

# Timeseries of global GPP in grams/s for ELM/CLM:
ncclimo -P elm --split --rgn_stt=sum --sum_scl=1.0e6 -v GPP ...
# Timeseries of global GPP in GT C/yr for ELM/CLM:
ncclimo -P elm --split --rgn_stt=sum --sum_scl=1.0e6*3600*24*365/1.0e12 -v GPP ...
# Timeseries of global column vapor in kg for EAM/CAM:
ncclimo -P eam --split --rgn_stt=sum --sum_scl=6.37122e6^2 -v TMQ ...
http://nco.sf.net/nco.html#ncclimo
http://nco.sf.net/nco.html#rgn_stt
http://nco.sf.net/nco.html#sum_scl

BUG FIXES:
   
A. ncks --chk_map fixes a mix-up introduced in 5.2.7 where the new
area_b diagnostics were mis-labeled and show the location of min/max
on the area_a grid instead of the area_b grid. The workaround is to
use 5.2.6 or earlier. The solution is to upgrade.

B. ncremap fixes a problem where portions of missing values (aka
_FillValue) could infect destination cells whose sub-gridscale (SGS)
fractions equal _FillValue. This problem can arise in ELM/CLM
datasets because their 'landfrac' variable sets non-land areas to the
missing value (a practice of questionable value). Thanks to Chloe
Whicker-Clarke for reporting this issue. There is no workaround. The
solution is to upgrade. 

Full release statement at http://nco.sf.net/ANNOUNCE
    
KNOWN PROBLEMS DUE TO NCO:

This section of ANNOUNCE reports and reminds users of the
existence and severity of known, not yet fixed, problems. 
These problems occur with NCO 5.2.7 built/tested under
MacOS 14.6.1 with netCDF 4.9.3-RC1 on HDF5 1.14.3 and with
Linux FC40 with netCDF 4.9.2 on HDF5 1.14.1.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   20190201: Possibly this problem was fixed in netCDF 4.6.2 by https://github.com/Unidata/netcdf-c/pull/1001
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride
   Workaround #3: Compile NCO with netCDF >= 4.6.2

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but produces unreadable file foo.nc
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   20190202: Progress has recently been made in netCDF 4.6.3-development
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

